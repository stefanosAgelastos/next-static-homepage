{"version":3,"file":"static/webpack/static/development/pages/projects/[pid].js.deb1b47b14063bbb1293.hot-update.js","sources":["webpack:///./src/ProjectMarkdown.tsx"],"sourcesContent":["import React from 'react';\nimport Markdown, { MarkdownOptions } from 'markdown-to-jsx';\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Link from '@material-ui/core/Link';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport MyPaper from './MyPaper';\n\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    listItem: {\n      marginTop: theme.spacing(1),\n    },\n    root: {\n      marginTop: theme.spacing(8),\n    },\n    image: {\n      width: \"45%\",\n      position: \"revert\",\n      right: \"20\",\n      margin: theme.spacing(1),\n      display: \"inline\"\n    },\n    code: {\n      backgroundColor: 'rgba(0,0,0,.1)',\n      padding: theme.spacing(1),\n    }\n  }));\n\n\ntype Props = {\n  projectMD: string,\n  titleBackroundImage: string\n};\n\nexport default function ProjectMarkdown(props: Props) {\n\n  const { projectMD, titleBackroundImage } = props;\n  const classes = useStyles();\n  const options: MarkdownOptions = {\n    overrides: {\n      h1: { component: props => (<MyPaper backgroundimageurl={titleBackroundImage}>\n                                  <Typography color=\"inherit\" gutterBottom variant=\"h3\" {...props} />\n        </MyPaper>)\n      },\n      h2: { component: props => <Typography gutterBottom variant=\"h5\" {...props} /> },\n      h3: { component: props => <Typography gutterBottom variant=\"subtitle1\" {...props} /> },\n      h4: { component: props => <Typography gutterBottom variant=\"caption\" paragraph {...props} /> },\n      p: { component: props => <Typography paragraph {...props} /> },\n      a: { component: Link },\n      code: { component: MyPaper, props: { elevation: 0, className: classes.code } },\n      img: { component: CardMedia, props: { className: classes.image, component: 'img' } },\n      li: { component: ({ ...props }) => { return (<li className={classes.listItem}> <Typography component=\"span\" {...props} /> </li>) }},\n    },\n  };\n\n\n\n  return (\n    <div className={classes.root}>\n      <Markdown options={options}>{projectMD}</Markdown>\n    </div>\n  );\n}"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAAA;AAEA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AAFA;AAdmBA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;;;;A","sourceRoot":""}