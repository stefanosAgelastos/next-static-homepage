{"version":3,"file":"static/webpack/static\\development\\pages\\projects\\[pid].js.dc87537ab1b105e44032.hot-update.js","sources":["webpack:///./pages/MyMarkdownLayout.tsx","webpack:///./pages/projects/[pid].tsx"],"sourcesContent":["import React from \"react\";\r\nimport { makeStyles, createStyles, Theme } from \"@material-ui/core/styles\";\r\nimport {\r\n  MyChip,\r\n  InfoPaper,\r\n  HeaderTitle,\r\n  InfoGrid,\r\n  PanelGrid,\r\n  MainGrid,\r\n  Panel,\r\n  ImageCard,\r\n} from \"../src/MarkdownLayoutComponents\";\r\nimport Markdown, { MarkdownOptions } from \"markdown-to-jsx\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      flexGrow: 1,\r\n      marginTop: theme.spacing(4)\r\n    },\r\n    paper: {\r\n      padding: theme.spacing(2),\r\n      textAlign: \"center\",\r\n      color: theme.palette.text.secondary\r\n    },\r\n    chip: {\r\n      margin: theme.spacing(1)\r\n    }\r\n  })\r\n);\r\n\r\ntype Props = {\r\n  projectMD: string,\r\n  titleBackroundImage: string\r\n};\r\n\r\nexport default function MarkdownLayout(props: Props) {\r\n  const classes = useStyles();\r\n  const { projectMD, titleBackroundImage } = props;\r\n\r\n  const options: MarkdownOptions = {\r\n    overrides: {\r\n      img: ImageCard,\r\n      MainGrid: MainGrid,\r\n      HeaderTitle: {\r\n        component: HeaderTitle,\r\n        props: { backgroundimageurl: titleBackroundImage}\r\n      },\r\n      InfoGrid: InfoGrid ,\r\n      InfoPaper: InfoPaper ,\r\n      PanelGrid: PanelGrid,\r\n      Panel:  Panel,\r\n      MyChip: MyChip,\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Markdown options={options} children={projectMD} />\r\n    </div>\r\n  );\r\n}\r\n\r\n{/* <ControlledExpansionPanels />\r\n */}","import React from \"react\";\r\nimport {\r\n  getREADMEfromMyGithub,\r\n  getProjectImageUrl\r\n} from \"../../util/projectData\";\r\nimport { NextPageContext } from \"next\";\r\nimport { Collapse } from '@material-ui/core';\r\nimport MarkdownLayout from \"../MyMarkdownLayout\";\r\n\r\ntype Props = {\r\n  markdown: string;\r\n  imageUrl: string;\r\n};\r\n\r\ntype IState = {\r\n  zoom: boolean;\r\n}\r\n\r\nclass ProjectPage extends React.Component<Props, IState> {\r\n  constructor(props: Props) {\r\n    super(props);\r\n    this.state = {\r\n      zoom: false\r\n    };\r\n  }\r\n\r\n  static async getInitialProps({ query }: NextPageContext) {\r\n    const markdown = await getREADMEfromMyGithub(query.pid as string);\r\n    const imageUrl = getProjectImageUrl(query.pid as string);\r\n    return { markdown, imageUrl };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({ zoom: true });\r\n  }\r\n\r\n  componentWillMount() {\r\n    this.setState({ zoom: false });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Collapse in={this.state.zoom} timeout={500}>\r\n        <MarkdownLayout\r\n          projectMD={this.props.markdown}\r\n          titleBackroundImage={this.props.imageUrl}\r\n        /> \r\n      </Collapse>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ProjectPage;\r\n"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAUA;AAEA;AAAA;AAEA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAHA;AAKA;AACA;AADA;AAVA;AADA;AAsBA;AACA;AADA;AAAA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAXA;AADA;AAgBA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAEA;AAAA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChEA;AACA;AAKA;AACA;AACA;AAUA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AADA;AAFA;AAKA;AACA;;;AAOA;AACA;AAAA;AAAA;AACA;;;AAEA;AACA;AAAA;AAAA;AACA;;;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;;;;;;;;;;;;AAvBA;;AACA;AACA;;AADA;AACA;AACA;AAAA;AAAA;AAAA;AACA;;;;;;;;;;;;;;;;;;AAZA;AACA;AAiCA;;;;;;;A","sourceRoot":""}