{"version":3,"file":"static/webpack/static\\development\\pages\\projects.js.fc0617e541797f284d31.hot-update.js","sources":["webpack:///./util/projectData.ts"],"sourcesContent":["import { Project } from '../interfaces'\r\nimport projects from './projects.json'\r\nimport 'isomorphic-unfetch'\r\n\r\n\r\n/** Static project data. */\r\nexport const dataArray: Array<Project> = projects;\r\n/**\r\n * Calls a mock API which finds a project by SLUG from the list above.\r\n *\r\n * Throws an error if not found.\r\n */\r\nexport function findData(slug: string) {\r\n    const selected = dataArray.find(data => data.slug === slug)\r\n\r\n    if (!selected) {\r\n        throw new Error('Cannot find project')\r\n    }\r\n\r\n    return selected\r\n}\r\n\r\n/* \r\n    This method \r\n\r\n*/\r\nexport async function getREADMEfromMyGithub(slug: string): Promise<string> {\r\n    return new Promise<string>((resolve, reject) => {\r\n        const selected = dataArray.find(data => data.slug === slug)\r\n        if (!selected) {\r\n            reject(new Error(\"No project matches the slug\"));\r\n        } else {\r\n            fetch(`https://raw.githubusercontent.com/stefanosAgelastos${selected.markdownUrlPath}/README.md`,\r\n                 { headers: { 'Accept': 'text/plain; charset=utf-8' } })\r\n                .then(value => value.text())\r\n                .then(value => resolve(value));\r\n        }\r\n    });\r\n}\r\n/** Calls a mock API which returns the above array to simulate \"get all\". */\r\n/* export function findAll() {\r\n    // Throw an error, just for example.\r\n    if (!Array.isArray(dataArray)) {\r\n        throw new Error('Cannot find projects')\r\n    }\r\n\r\n    return dataArray\r\n} */\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AACA;AACA;AAGA;AACA;AAAA;AACA;;;;;;AAKA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;AAIA;AAAA;AAAA;AAaA;AACA;AAAA;;;;;;;;;;;;AAdA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAZA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;A","sourceRoot":""}