{"version":3,"file":"static/webpack/static/development/pages/_app.js.1361eea050a3494856a6.hot-update.js","sources":["webpack:///./src/MySnack.tsx"],"sourcesContent":["import React, { useEffect } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\n\nexport default function SimpleSnackbar() {\n  const [open, setOpen] = React.useState(false);\n\n  useEffect(() => {\n    setOpen(true);\n  }, []); // run an effect and clean it up only once (on mount and unmount)\n\n  function handleClose(\n    _event: React.SyntheticEvent | React.MouseEvent,\n    reason?: string\n  ) {\n    if (reason === \"clickaway\") {\n      return;\n    }\n\n    setOpen(false);\n  }\n\n  return (\n    <Snackbar\n      anchorOrigin={{\n        vertical: \"top\",\n        horizontal: \"center\"\n      }}\n      open={open}\n      autoHideDuration={8000}\n      onClose={handleClose}\n      /*         ContentProps={{\n          'aria-describedby': 'message-id',\n        }}\n        message={<span  id=\"message-id\">Page under development, I am sorrry for the bad experience.</span>} */\n      action={[\n        <Button key=\"undo\" color=\"secondary\" size=\"small\" onClick={handleClose}>\n          I understand\n        </Button>\n      ]}\n    />\n  );\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;;;;AARA;AAYA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAbA;AAAA;AAAA;AAAA;AAAA;AAAA;AAmBA;;;;A","sourceRoot":""}