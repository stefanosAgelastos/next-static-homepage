{"version":3,"file":"static/webpack/static\\development\\pages\\projects\\[pid].js.6294d88659cd2b7e58db.hot-update.js","sources":["webpack:///./pages/projects/[pid].tsx","webpack:///./util/projectData.ts"],"sourcesContent":["import React from 'react';\r\nimport { NextPage } from 'next';\r\nimport ProjectMarkdown from '../../src/ProjectMarkdown';\r\nimport { getREADMEfromMyGithub } from '../../util/projectData';\r\n\r\ntype Props = {\r\n  markdown: string\r\n}\r\n\r\nconst ProjectPage: NextPage<Props> = (props) => {\r\n  return (<ProjectMarkdown projectMD={props.markdown} />)\r\n}\r\n\r\nProjectPage.getInitialProps = async ({ query }) => {\r\n  const markdown = await getREADMEfromMyGithub(query.pid as string);\r\n  return {markdown};\r\n}\r\n\r\nexport default ProjectPage;","import { Project } from '../interfaces'\r\nimport projects from './projects.json'\r\nimport 'isomorphic-unfetch'\r\n\r\n\r\n/** Static project data. */\r\nexport const dataArray: Array<Project> = projects;\r\n/**\r\n * Calls a mock API which finds a project by SLUG from the list above.\r\n *\r\n * Throws an error if not found.\r\n */\r\nexport function findData(slug: string) {\r\n    const selected = dataArray.find(data => data.slug === slug)\r\n\r\n    if (!selected) {\r\n        throw new Error('Cannot find project')\r\n    }\r\n\r\n    return selected\r\n}\r\n\r\nexport async function getREADMEfromMyGithub(slug: string): Promise<string> {\r\n\r\n    return new Promise<string>((resolve, reject) => {\r\n        const selected = dataArray.find(data => data.slug === slug)\r\n        if (!selected) {\r\n            reject(new Error(\"No project matches the slug\"));\r\n        } else {\r\n            fetch(selected.markdownUrl\r\n                , { headers: { 'Accept': 'text/plain; charset=utf-8' } })\r\n                .then(value => value.text())\r\n                .then(value => resolve(value));\r\n        }\r\n    });\r\n}\r\n/** Calls a mock API which returns the above array to simulate \"get all\". */\r\n/* export function findAll() {\r\n    // Throw an error, just for example.\r\n    if (!Array.isArray(dataArray)) {\r\n        throw new Error('Cannot find projects')\r\n    }\r\n\r\n    return dataArray\r\n} */\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;AAEA;AACA;AACA;AAKA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AADA;AAEA;AAAA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAIA;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjBA;AACA;AAGA;AACA;AAAA;AACA;;;;;;AAKA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAcA;AACA;AAAA;;;;;;;;;;;;AAfA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAbA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;A","sourceRoot":""}