{"version":3,"file":"static/webpack/static/development/pages/projects/[pid].js.22019818326e4517af24.hot-update.js","sources":["webpack:///./src/MarkdownLayoutComponents.tsx"],"sourcesContent":["import React from \"react\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport {\n  Chip,\n  makeStyles,\n  Theme,\n  createStyles,\n  Grid,\n  Paper,\n  ExpansionPanel,\n  ExpansionPanelSummary,\n  Typography,\n  ExpansionPanelDetails\n} from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    titlePaper: {\n      padding: theme.spacing(2),\n      textAlign: \"center\",\n      color: theme.palette.common.white,\n      backgroundColor: theme.palette.primary.dark,\n    },\n    paper: {\n      padding: theme.spacing(2),\n      textAlign: \"center\",\n      backgroundColor: theme.palette.primary.dark,\n      color: theme.palette.text.primary,\n      fontSize\n    },\n    chip: {\n      margin: theme.spacing(1),\n      backgroundColor: theme.palette.common.black,\n      color: theme.palette.text.primary\n    },\n    panelRoot: {\n      width: \"100%\",\n      backgroundColor: theme.palette.primary.main\n    },\n    heading: {\n      fontSize: theme.typography.pxToRem(15),\n      fontWeight: \"bold\",\n      flexBasis: \"33.33%\",\n      flexShrink: 0\n    },\n    secondaryHeading: {\n      fontSize: theme.typography.pxToRem(15),\n      color: theme.palette.text.primary,\n    },\n    images: {\n      marginTop: theme.spacing(2)\n    }\n  })\n);\n\nexport const MainGrid: React.FunctionComponent<{}> = ({ children }) => {\n  return (\n    <Grid container spacing={3}>\n      {children}\n    </Grid>\n  );\n};\n\nexport const HeaderTitle: React.FunctionComponent<{}> = ({ children }) => {\n  const classes = useStyles();\n  return (\n    <React.Fragment>\n    <Grid item xs={12} >\n      <Paper square className={classes.titlePaper} >\n        <Typography>{children}</Typography>\n      </Paper>\n    </Grid>\n    </React.Fragment>\n  );\n};\n\nexport const InfoGrid: React.FunctionComponent<{}> = ({ children }) => {\n  return (\n    <Grid item xs={12} md={6} container direction=\"column\">\n      {children}\n    </Grid>\n  );\n};\n\nexport const InfoPaper: React.FunctionComponent<{}> = ({ children }) => {\n  const classes = useStyles();\n  return (\n    <Grid>\n      <Paper square className={classes.paper}>{children}</Paper>\n    </Grid>\n  );\n};\n\nexport type MyChipProps = {\n  label: string;\n};\n\nexport const MyChip: React.FunctionComponent<{}> = ({ ...props }) => {\n  const classes = useStyles();\n  const { label } = props as MyChipProps;\n  return (\n    <Chip className={classes.chip} label={label} />\n  );\n};\n\nexport const PanelGrid: React.FunctionComponent<{}> = ({ children }) => {\n  return (\n    <Grid item xs={12} md={6}>\n      <div >{children}</div>\n    </Grid>\n  );\n};\n\nexport type MyPanelProps = {\n  id: string;\n  heading: string;\n  secondaryHeading: string;\n};\n\nexport const Panel: React.FunctionComponent<{}> = ({ children, ...props }) => {\n  const classes = useStyles();\n  const { id, heading, secondaryHeading } = props as MyPanelProps;\n  return (\n    <ExpansionPanel square className={classes.panelRoot}>\n      <ExpansionPanelSummary\n        expandIcon={<ExpandMoreIcon />}\n        aria-controls={`${id}bh-content`}\n        id={id}\n      >\n        <Typography className={classes.heading}>{heading}</Typography>\n        <Typography className={classes.secondaryHeading}>\n          {secondaryHeading}\n        </Typography>\n      </ExpansionPanelSummary>\n      <ExpansionPanelDetails>\n        <Typography>{children}</Typography>\n      </ExpansionPanelDetails>\n    </ExpansionPanel>\n  );\n};\n\nexport const ImageCard: React.FunctionComponent<{}> = ({ ...props }) => {\n  const classes = useStyles();\n  return (\n    <CardMedia\n      component=\"img\"\n      classes={{\n        root: classes.images\n      }}\n      {...props}\n    />\n  );\n};\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAaA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAjCA;AADA;AAwCA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAEA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAEA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAEA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAMA;AAAA;AACA;AAAA;AADA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAQA;AAAA;AAAA;AACA;AAAA;AADA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAEA;AAAA;AACA;AAAA;AACA;AAEA;AACA;AACA;AADA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;;;;A","sourceRoot":""}