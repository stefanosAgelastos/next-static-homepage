{"version":3,"file":"static/webpack/static/development/pages/_app.js.3bb2997aa4b6abe14b8f.hot-update.js","sources":["webpack:///./src/MyIconTabs.tsx"],"sourcesContent":["import React, { useEffect } from \"react\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Router from \"next/router\";\nimport { Theme, createStyles, makeStyles } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n      backgroundColor: \"rgba(255,255,255,0)\"\n    },\n    tabRoot: {\n      color: theme.palette.primary.main,\n      \"&:hover\": {\n        color: theme.palette.primary.light,\n        opacity: 1\n      }\n    },\n    tabIndicator: {\n      backgroundColor: theme.palette.primary.main\n    }\n  })\n);\n\nexport default function CenteredTabs() {\n  const [value, setValue] = React.useState(\"/\");\n\n  function handleChange(_event: React.ChangeEvent<{}>, newValue: string) {\n    Router.push(newValue);\n    setValue(newValue);\n  }\n\n  useEffect(() => {\n    // Set initial state of the Tabs component for SSR\n    Router.pathname == \"/\"\n      ? setValue(\"/\")\n      : Router.pathname == \"/contact\"\n      ? setValue(\"/contact\")\n      : setValue(\"/projects\");\n\n    Router.events.on(\"routeChangeStart\", url => {\n      // Change the state of the Tabs depending on URL change\n      url == \"/\"\n        ? setValue(\"/\")\n        : url == \"/contact\"\n        ? setValue(\"/contact\")\n        : setValue(\"/projects\");\n    });\n  }, []); // run an effect and clean it up only once (on mount and unmount)\n\n  const classes = useStyles();\n  return (\n    <Paper className={classes.root}>\n      <Tabs\n        value={value}\n        onChange={handleChange}\n        classes={{\n          root: classes.tabRoot,\n          indicator: classes.tabIndicator\n        }}\n        centered\n      >\n        <Tab\n          classes={{\n            root: classes.tabRoot,\n            indicator: classes.tabIndicator\n          }}\n          label=\"Home\"\n          value=\"/\"\n        />\n        <Tab\n          classes={{\n            root: classes.tabRoot,\n            indicator: classes.tabIndicator\n          }}\n          label=\"My projects\"\n          value=\"/projects\"\n        />\n        <Tab\n          classes={{\n            root: classes.tabRoot,\n            indicator: classes.tabIndicator\n          }}\n          label=\"Contact\"\n          value=\"/contact\"\n        />\n      </Tabs>\n    </Paper>\n  );\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAEA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAFA;AAFA;AAOA;AACA;AADA;AAZA;AADA;AAmBA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAFA;AAIA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AACA;AACA;AAFA;AAIA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AACA;AACA;AAFA;AAIA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AACA;AACA;AAFA;AAIA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;;;;A","sourceRoot":""}