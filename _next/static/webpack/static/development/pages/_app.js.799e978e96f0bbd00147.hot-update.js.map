{"version":3,"file":"static/webpack/static/development/pages/_app.js.799e978e96f0bbd00147.hot-update.js","sources":["webpack:///./src/MySnack.tsx"],"sourcesContent":["import React, { useEffect } from \"react\";\nimport { makeStyles, Theme, createStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport WarningIcon from \"@material-ui/icons/Warning\";\n\nconst useStyles = makeStyles((_theme: Theme) =>\n  createStyles({\n    warning: {\n        backgroundColor: \"#FFBF00\",\n    }\n  })\n);\n\nexport default function SimpleSnackbar() {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n\n  useEffect(() => {\n    setOpen(true);\n  }, []); // run an effect and clean it up only once (on mount and unmount)\n\n  function handleClose(\n    _event: React.SyntheticEvent | React.MouseEvent,\n    reason?: string\n  ) {\n    if (reason === \"clickaway\") {\n      return;\n    }\n\n    setOpen(false);\n  }\n\n  return (\n    <Snackbar\n      anchorOrigin={{\n        vertical: \"top\",\n        horizontal: \"left\"\n      }}\n      open={open}\n      autoHideDuration={6000}\n      onClose={handleClose}\n      ContentProps={{\n        \"aria-describedby\": \"message-id\",\n        \"classes\": \"classes.warning\"        \n      }}\n      className={classes.warning}\n      message={\n        <span id=\"message-id\">\n          Page under development, I am sorrry for the bad experience.\n        </span>\n      }\n      action={[\n        <Button key=\"undo\" color=\"secondary\" size=\"small\" onClick={handleClose}>\n          I understand\n        </Button>,\n        <WarningIcon />\n      ]}\n    />\n  );\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAEA;AACA;AADA;AADA;AADA;AAQA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AACA;AAGA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAtBA;AAAA;AAAA;AAAA;AAAA;AAAA;AA0BA;;;;A","sourceRoot":""}